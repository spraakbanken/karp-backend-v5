name: Build

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mariadb:10.3
        ports:
          - 3306
        env:
          MYSQL_ROOT_PASSWORD: testing
          MYSQL_DATABASE: karp
          MYSQL_PASSWORD: testing
          MYSQL_USER: karp
        options: --health-cmd "mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 10

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8]
        es-version: ["6.2.4", "6.5.4", "6.8.6"]
    # env:
    #   KARP5_DBPASS: karp:testing@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/karp_test
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - name: Download elasticsearch
        run: |
          wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-${{ matrix.es-version }}.tar.gz
          tar -xzf elasticsearch-${{ matrix.es-version }}.tar.gz
          echo "ELASTICSEARCH_ENABLED=True" >> .env
          echo "ES_HOME=`realpath elasticsearch-${{ matrix.es-version }}`" >> .env
          cat .env
      - name: Lint with flake8 for syntax errors
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 karp5 setup.py wsgi.py --count --select=E9,F63,F7,F82 --show-source --statistics
      - name: Lint with pylint
        run: |
          pylint --rcfile=.pylintrc --exit-zero karp5 setup.py run.py cli.py
      - name: Test with pytest
        run: |
          echo "KARP5_DBPASS=${KARP5_DBPASS}"
          pytest -vv --cov=karp5 --cov-report=term karp5/tests
          docker logs "${{ job.services.mysql.id }}"
        env:
          KARP5_DBPASS: karp:testing@127.0.0.1:${{ job.services.mysql.ports['3306'] }}
      # - name: Coveralls
      #   uses: coverallsapp/github-action@master
      #   with:
      #     github-token: ${{ secrets.github_token }}
  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - name: Build distribution
        run: |
          pip install --upgrade setuptools twine wheel pbr
          python setup.py sdist bdist_wheel
      - name: Check distributions
        run: twine check dist/*
      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.test_pypi_password }}
          repository_url: https://test.pypi.org/legacy/
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@master
        if: github.repository == 'spraakbanken/python-json-tools' && startsWith(github.event.ref, 'refs/tags')
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
